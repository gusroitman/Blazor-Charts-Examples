@page "/Apexmisc"
@using ApexCharts
@using Charts_MudBlazor.Pages.ApexData

<h3>Example Apex Theme Charts</h3><br />

<div class="d-flex p-2 justify-content-start flex-wrap">

<div class="g-col-6 g-col-md-4" style="min-width:400px;max-width:500px">
<Row class="mb-3">
    <div class="me-2" Auto>
        <MudButton OnClick="OnToggledChanged" Variant="Variant.Filled" Color="MudBlazor.Color.Primary">
            @if (ThemeOn)
            {
                <MudText>Click me for Dark Theme</MudText>
            }
            else
            {
                <MudText>Click me for Light Theme</MudText>
            }
        </MudButton>
    </div>
</Row>
<br /><br />
    <ApexChart TItem="Order"
               Title="Order Gross Value"
               Options=options
               @ref=chart>

        <ApexPointSeries TItem="Order"
                         Items="Orders"
                         SeriesType="SeriesType.Pie"
                         Name="Gross Value"
                         XValue="@(e => e.Country)"
                         YAggregate="@(e => e.Sum(e => e.GrossValue))"
                         OrderByDescending="e=>e.Y" />
    </ApexChart>
</div>
</div>

@code 
{

    private List<Order> Orders { get; set; } = SampleData.GetOrders();
    private ApexChartOptions<Order> options;
    private ApexChart<Order>? chart;
    private List<PaletteType> paletteTypes = Enum.GetValues(typeof(PaletteType)).Cast<PaletteType>().ToList();

    public bool ThemeOn { get; set; } = true;

    protected override void OnInitialized()
    {
        options = new ApexChartOptions<Order>
            {
                Theme = new Theme
                {
                    Mode = Mode.Light,
                    Palette = PaletteType.Palette1
                }
            };

    }

    public void OnToggledChanged()
    {
        if (!ThemeOn)
        {
            options.Theme.Mode = Mode.Light;
            UpdateChart();
            ThemeOn = true;

        }
        else
        {
            options.Theme.Mode = Mode.Dark;
            UpdateChart();
            ThemeOn = false;
        }
    }

    private Task UpdateChart() => chart.RenderAsync();

}
